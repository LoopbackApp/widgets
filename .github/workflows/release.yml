name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset:version
          publish: pnpm changeset:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Deploy Javascript widget
        if: steps.changesets.outputs.published == 'true'
        working-directory: packages/widget-js-script
        run: pnpm build && pnpm upload:prod
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      - name: Purge Cloudflare cache for widget scripts
        if: steps.changesets.outputs.published == 'true'
        run: |
          curl --request POST \
            --url https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_PURGE_ZONE_ID/purge_cache \
            --header "Content-Type: application/json" \
            --header "Authorization: Bearer $CLOUDFLARE_PURGE_API_TOKEN" \
            --data '{
            "files": [
              "https://widget.loopback.works/latest/loopback.js",
              "https://widget.loopback.works/latest/ce.js"
            ]
          }'
        env:
          CLOUDFLARE_PURGE_ZONE_ID: ${{ secrets.CLOUDFLARE_PURGE_ZONE_ID }}
          CLOUDFLARE_PURGE_API_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_API_TOKEN }}
